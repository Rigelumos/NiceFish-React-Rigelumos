{"version":3,"file":"22.bundle.js","sources":["webpack:///./src/components/write/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport BraftEditor from \"braft-editor\";\nimport \"braft-editor/dist/index.css\";\nfunction Write() {\n  const [editorState, updateEditorState] = useState(null);\n  function handleEditorChange(editorState: any) {\n    updateEditorState(editorState);\n  }\n  function submitContent() {\n    // 在编辑器获得焦点时按下ctrl+s会执行此方法\n    // 编辑器内容提交到服务端之前，可直接调用editorState.toHTML()来获取HTML格式的内容\n    // const htmlContent = editorState.toHTML()\n    // const result = saveEditorContent(htmlContent)\n  }\n  useEffect(() => {\n    // const htmlContent = await fetchEditorContent()\n    // 使用BraftEditor.createEditorState将html字符串转换为编辑器需要的editorState数据\n    // this.setState({\n    //   editorState: BraftEditor.createEditorState(htmlContent)\n    // })\n  }, []);\n  return (\n    <div className=\"container write-post-container mtb-16px\">\n      <div className=\"row no-gutters\">\n        <div className=\"col-md-12\">\n          <form role=\"form\">\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"标题，2到32个字符\"\n              />\n            </div>\n            <div className=\"form-group border-1px-primary\">\n              <BraftEditor\n                value={editorState}\n                onChange={handleEditorChange}\n                onSave={submitContent}\n              />\n            </div>\n            <div className=\"pd-16px\">\n            <button type=\"button\" className=\"btn btn-primary\">\n              提交\n            </button>\n            </div>\n            \n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Write;\n"],"mappings":"AAAA","sourceRoot":""}